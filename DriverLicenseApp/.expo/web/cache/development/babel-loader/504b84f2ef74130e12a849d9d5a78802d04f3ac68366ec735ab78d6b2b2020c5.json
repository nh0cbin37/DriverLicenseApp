{"ast":null,"code":"import { configureStore } from '@reduxjs/toolkit';\nimport QuestionsReducer from \"./QuestionsReducer\";\nimport { composeWithDevTools } from 'redux-devtools-extension';\nvar store = configureStore({\n  reducer: {\n    questions: composeWithDevTools(QuestionsReducer)\n  }\n});\nexport default store;","map":{"version":3,"names":["configureStore","QuestionsReducer","composeWithDevTools","store","reducer","questions"],"sources":["C:/ReactNative/DriverLicense/DriverLicenseApp/redux/store.js"],"sourcesContent":["// store.js\r\n\r\n// import { createStore, applyMiddleware } from 'redux';\r\n// import thunk from 'redux-thunk';\r\n// import rootReducer from './rootReducer';\r\n// const store = createStore(rootReducer, applyMiddleware(thunk));\r\n// export default store;\r\n\r\n\r\n// import { createStore, applyMiddleware } from 'redux';\r\n// import thunk from 'redux-thunk';\r\n// import { persistStore, persistReducer } from 'redux-persist';\r\n// import AsyncStorage from '@react-native-async-storage/async-storage';\r\n// import rootReducer from './rootReducer';\r\n// const persistConfig = {\r\n//     key: 'root',\r\n//     storage: AsyncStorage,\r\n//     whitelist: ['importantQuestions', 'ruleQuestions'],\r\n// };\r\n// const persistedReducer = persistReducer(persistConfig, rootReducer);\r\n// const store = createStore(persistedReducer, applyMiddleware(thunk));\r\n// const persistor = persistStore(store);\r\n// export { store, persistor };\r\n\r\n\r\nimport { configureStore } from '@reduxjs/toolkit';\r\nimport QuestionsReducer from './QuestionsReducer';\r\nimport { composeWithDevTools } from 'redux-devtools-extension';\r\n\r\n\r\nconst store = configureStore({\r\n    reducer: {\r\n        questions: composeWithDevTools(QuestionsReducer),\r\n    },\r\n});\r\n\r\nexport default store;\r\n"],"mappings":"AAyBA,SAASA,cAAc,QAAQ,kBAAkB;AACjD,OAAOC,gBAAgB;AACvB,SAASC,mBAAmB,QAAQ,0BAA0B;AAG9D,IAAMC,KAAK,GAAGH,cAAc,CAAC;EACzBI,OAAO,EAAE;IACLC,SAAS,EAAEH,mBAAmB,CAACD,gBAAgB;EACnD;AACJ,CAAC,CAAC;AAEF,eAAeE,KAAK"},"metadata":{},"sourceType":"module","externalDependencies":[]}