{"ast":null,"code":"import _toConsumableArray from \"@babel/runtime/helpers/toConsumableArray\";\nimport _asyncToGenerator from \"@babel/runtime/helpers/asyncToGenerator\";\nimport { createAsyncThunk, createSlice } from '@reduxjs/toolkit';\nimport axios from 'axios';\nimport { HOST } from \"../env\";\nvar initialState = {\n  importantQuestion: {\n    data: [],\n    index: 0,\n    style: [],\n    history: [],\n    currentIndex: -1,\n    loading: false,\n    error: ''\n  },\n  ruleQuestion: {\n    data: [],\n    index: 0,\n    style: [],\n    history: [],\n    currentIndex: -1,\n    loading: false,\n    error: ''\n  },\n  typeQuestion: \"\"\n};\nexport var fetchA1QuestionData = createAsyncThunk('question/fetchA1QuestionData', _asyncToGenerator(function* () {\n  var response = yield axios.get(`${HOST}/Question/get/type/A1`);\n  return response.data;\n}));\nexport var fetchB1QuestionData = createAsyncThunk('question/fetchB1QuestionData', _asyncToGenerator(function* () {\n  var response = yield axios.get(`${HOST}/Question/get/type/B1`);\n  return response.data;\n}));\nvar handleAsyncThunk = function handleAsyncThunk(builder, asyncThunk, stateKeys) {\n  builder.addCase(asyncThunk.pending, function (state) {\n    state.status = 'loading';\n    stateKeys.forEach(function (key) {\n      state[key].loading = true;\n    });\n  }).addCase(asyncThunk.fulfilled, function (state, action) {\n    state.status = 'succeeded';\n    stateKeys.forEach(function (key) {\n      state[key].loading = false;\n      state[key].data = action.payload;\n    });\n  }).addCase(asyncThunk.rejected, function (state, action) {\n    state.status = 'failed';\n    stateKeys.forEach(function (key) {\n      state[key].loading = false;\n      state[key].error = action.error.message;\n    });\n  });\n};\nvar Slice = createSlice({\n  name: 'question',\n  initialState: initialState,\n  reducers: {\n    setIndex: function setIndex(state, action) {\n      var _action$payload = action.payload,\n        target = _action$payload.target,\n        value = _action$payload.value;\n      state[target].index = value;\n    },\n    setStyles: function setStyles(state, action) {\n      var _action$payload2 = action.payload,\n        target = _action$payload2.target,\n        value = _action$payload2.value;\n      state[target].style = value;\n    },\n    resetState: function resetState(state, action) {\n      var target = action.payload.target;\n      state[target].index = 0, state[target].currentIndex = -1, state[target].history = [], state[target].style = [], state[target].redoHistory = [];\n    },\n    saveQuestion: function saveQuestion(state, action) {\n      var target = action.payload.target;\n      var currentData = {\n        index: state[target].index,\n        style: _toConsumableArray(state[target].style)\n      };\n      state[target].history.push({\n        currentData: currentData\n      });\n    },\n    setTypeQuestion: function setTypeQuestion(state, action) {\n      var target = action.payload.target;\n      state.typeQuestion = target;\n    },\n    moveToNextQuestion: function moveToNextQuestion(state, action) {\n      var _action$payload3 = action.payload,\n        target = _action$payload3.target,\n        value = _action$payload3.value;\n      if (state[target].index === value.length - 1) return;else {\n        var currentData = {\n          index: state[target].index,\n          style: _toConsumableArray(state[target].style)\n        };\n        var nextData = state[target].history[currentData.index + 1] || null;\n        var isDataCurrentExist = state[target].history.some(function (data) {\n          return data.hasOwnProperty('index') && data.index === currentData.index;\n        });\n        var isDataNextExist = state[target].history.some(function (data) {\n          return nextData !== null && data.index === nextData.index;\n        });\n        if (!isDataCurrentExist) {\n          state[target].history.push(currentData);\n          if (!isDataNextExist) {\n            state[target].index += 1;\n            state[target].style = [];\n            state[target].currentIndex += 1;\n          } else {\n            state[target].index = nextData.index;\n            state[target].style = _toConsumableArray(nextData.style);\n            state[target].currentIndex += 1;\n          }\n        } else {\n          state[target].style = _toConsumableArray(currentData.style);\n          state[target].history[currentData.index].style = _toConsumableArray(currentData.style);\n          if (!isDataNextExist) {\n            state[target].index += 1;\n            state[target].style = [];\n            state[target].currentIndex += 1;\n          } else {\n            state[target].index = nextData.index;\n            state[target].style = _toConsumableArray(nextData.style);\n            state[target].currentIndex += 1;\n          }\n        }\n      }\n    },\n    moveToPreviousQuestion: function moveToPreviousQuestion(state, action) {\n      var target = action.payload.target;\n      if (state[target].currentIndex >= 0) {\n        var currentData = {\n          index: state[target].index,\n          style: _toConsumableArray(state[target].style)\n        };\n        var isDataCurrentExist = state[target].history.some(function (data) {\n          return data.hasOwnProperty('index') && data.index === currentData.index;\n        });\n        if (!isDataCurrentExist) {\n          state[target].history.push(currentData);\n        } else {\n          state[target].style = _toConsumableArray(currentData.style);\n          state[target].history[currentData.index].style = _toConsumableArray(currentData.style);\n        }\n        var previousData = state[target].history[state[target].currentIndex] || null;\n        state[target].index = previousData.index;\n        state[target].style = _toConsumableArray(previousData.style);\n        state[target].currentIndex -= 1;\n      }\n    }\n  },\n  extraReducers: function extraReducers(builder) {\n    handleAsyncThunk(builder, fetchA1QuestionData, [\"importantQuestion\", \"ruleQuestion\"]);\n    handleAsyncThunk(builder, fetchB1QuestionData, [\"importantQuestion\", \"ruleQuestion\"]);\n  }\n});\nvar _Slice$actions = Slice.actions,\n  setIndex = _Slice$actions.setIndex,\n  setStyles = _Slice$actions.setStyles,\n  moveToNextQuestion = _Slice$actions.moveToNextQuestion,\n  moveToPreviousQuestion = _Slice$actions.moveToPreviousQuestion,\n  resetState = _Slice$actions.resetState,\n  saveQuestion = _Slice$actions.saveQuestion,\n  setTypeQuestion = _Slice$actions.setTypeQuestion;\nexport { setIndex, setStyles, moveToNextQuestion, moveToPreviousQuestion, resetState, saveQuestion, setTypeQuestion };\nexport default Slice.reducer;","map":{"version":3,"names":["createAsyncThunk","createSlice","axios","HOST","initialState","importantQuestion","data","index","style","history","currentIndex","loading","error","ruleQuestion","typeQuestion","fetchA1QuestionData","_asyncToGenerator","response","get","fetchB1QuestionData","handleAsyncThunk","builder","asyncThunk","stateKeys","addCase","pending","state","status","forEach","key","fulfilled","action","payload","rejected","message","Slice","name","reducers","setIndex","_action$payload","target","value","setStyles","_action$payload2","resetState","redoHistory","saveQuestion","currentData","_toConsumableArray","push","setTypeQuestion","moveToNextQuestion","_action$payload3","length","nextData","isDataCurrentExist","some","hasOwnProperty","isDataNextExist","moveToPreviousQuestion","previousData","extraReducers","_Slice$actions","actions","reducer"],"sources":["C:/ReactNative/DriverLicense/DriverLicenseApp/redux/QuestionsReducer.js"],"sourcesContent":["\r\nimport { createAsyncThunk, createSlice } from '@reduxjs/toolkit';\r\nimport axios from 'axios';\r\nimport { HOST } from '../env';\r\n\r\n\r\nconst initialState = {\r\n    importantQuestion: { data: [], index: 0, style: [], history: [], currentIndex: -1, loading: false, error: '', },\r\n    ruleQuestion: { data: [], index: 0, style: [], history: [], currentIndex: -1, loading: false, error: '', },\r\n    typeQuestion: \"\",\r\n}\r\nexport const fetchA1QuestionData = createAsyncThunk('question/fetchA1QuestionData', async () => {\r\n    const response = await axios.get(`${HOST}/Question/get/type/A1`);\r\n    return response.data;\r\n});\r\n\r\nexport const fetchB1QuestionData = createAsyncThunk('question/fetchB1QuestionData', async () => {\r\n    const response = await axios.get(`${HOST}/Question/get/type/B1`);\r\n    return response.data;\r\n});\r\n\r\nconst handleAsyncThunk = (builder, asyncThunk, stateKeys) => {\r\n    builder\r\n        .addCase(asyncThunk.pending, state => {\r\n            state.status = 'loading';\r\n            stateKeys.forEach(key => {\r\n                state[key].loading = true;\r\n            });\r\n        })\r\n        .addCase(asyncThunk.fulfilled, (state, action) => {\r\n            state.status = 'succeeded';\r\n            stateKeys.forEach(key => {\r\n                state[key].loading = false;\r\n                state[key].data = action.payload;\r\n            });\r\n        })\r\n        .addCase(asyncThunk.rejected, (state, action) => {\r\n            state.status = 'failed';\r\n            stateKeys.forEach(key => {\r\n                state[key].loading = false;\r\n                state[key].error = action.error.message;\r\n            });\r\n        });\r\n};\r\n\r\nconst Slice = createSlice({\r\n    name: 'question',\r\n    initialState,\r\n    reducers: {\r\n        setIndex: (state, action) => {\r\n            const { target, value } = action.payload;\r\n            state[target].index = value;\r\n        },\r\n        setStyles: (state, action) => {\r\n            const { target, value } = action.payload;\r\n            state[target].style = value;\r\n        },\r\n        resetState: (state, action) => {\r\n            const { target } = action.payload;\r\n            state[target].index = 0,\r\n                state[target].currentIndex = -1,\r\n                state[target].history = [],\r\n                state[target].style = [],\r\n                state[target].redoHistory = []\r\n        },\r\n        saveQuestion: (state, action) => {\r\n            const { target } = action.payload;\r\n            const currentData = {\r\n                index: state[target].index,\r\n                style: [...state[target].style],\r\n            };\r\n            state[target].history.push({ currentData });\r\n        },\r\n        setTypeQuestion: (state, action) => {\r\n            const { target } = action.payload;\r\n            state.typeQuestion = target\r\n        },\r\n        // moveToNextQuestion: (state, action) => {\r\n        //     const { target, value } = action.payload;\r\n        //     if (state[target].index === value.length - 1) return\r\n        //     else {\r\n        //         const currentData = {\r\n        //             index: state[target].index,\r\n        //             style: [...state[target].style]\r\n        //         };\r\n        //         const nextData = state[target].history[state[target].currentIndex + 1] || null;\r\n        //         const isDataCurrentExist = state[target].history.some(data =>\r\n        //             data.hasOwnProperty('index') && data.index === currentData.index\r\n        //         );\r\n        //         const isDataNextExist = state[target].history.some(data =>\r\n        //             nextData !== null && data.index === nextData.index\r\n        //         );\r\n        //         // Kiểm tra mảng hiện tại\r\n        //         if (!isDataCurrentExist) {\r\n        //             state[target].history.push(currentData);\r\n        //             if (!isDataNextExist) {\r\n        //                 state[target].index += 1;\r\n        //                 state[target].style = [];\r\n        //                 state[target].currentIndex += 1;\r\n        //             } else {\r\n        //                 state[target].index = nextData.index;\r\n        //                 state[target].style = [...nextData.style];\r\n        //                 state[target].currentIndex += 1;\r\n        //             }\r\n\r\n        //         } else {\r\n        //             // Cập nhật style hiện tại, nhưng không thêm mới dữ liệu vào lịch sử\r\n        //             state[target].style = [...currentData.style];\r\n        //             state[target].history[currentData.index].style = [...currentData.style];\r\n        //             if (!isDataNextExist) {\r\n        //                 state[target].index += 1;\r\n        //                 state[target].style = [];\r\n        //                 state[target].currentIndex += 1;\r\n        //             } else {\r\n        //                 state[target].index = nextData.index;\r\n        //                 state[target].style = [...nextData.style];\r\n        //                 state[target].currentIndex += 1;\r\n        //             }\r\n        //         }\r\n\r\n        //     }\r\n        // },\r\n        // moveToPreviousQuestion: (state, action) => {\r\n        //     const { target } = action.payload;\r\n        //     if (state[target].currentIndex >= 0) {\r\n        //         // Kiểm tra xem dữ liệu hiện tại đã tồn tại trong lịch sử chưa\r\n        //         const currentData = {\r\n        //             index: state[target].index,\r\n        //             style: [...state[target].style]\r\n        //         };\r\n        //         const isDataCurrentExist = state[target].history.some(data =>\r\n        //             data.hasOwnProperty('index') && data.index === currentData.index\r\n        //         );\r\n        //         // Nếu dữ liệu chưa tồn tại trong lịch sử, push vào history\r\n        //         if (!isDataCurrentExist) {\r\n        //             state[target].history.push(currentData);\r\n        //             state[target].currentIndex += 1;\r\n        //         } else {\r\n        //             // Cập nhật style hiện tại, nhưng không thêm mới dữ liệu vào lịch sử\r\n        //             state[target].style = [...currentData.style];\r\n        //             state[target].history[currentData.index].style = [...currentData.style];\r\n        //         }\r\n\r\n        //     }\r\n        // },\r\n        moveToNextQuestion: (state, action) => {\r\n            const { target, value } = action.payload;\r\n            if (state[target].index === value.length - 1) return\r\n            else {\r\n                const currentData = {\r\n                    index: state[target].index,\r\n                    style: [...state[target].style],\r\n                };\r\n                const nextData = state[target].history[currentData.index + 1] || null;\r\n                const isDataCurrentExist = state[target].history.some(data =>\r\n                    data.hasOwnProperty('index') && data.index === currentData.index\r\n                );\r\n                const isDataNextExist = state[target].history.some(data =>\r\n                    nextData !== null && data.index === nextData.index\r\n                );\r\n                // Kiểm tra mảng hiện tại\r\n                if (!isDataCurrentExist) {\r\n                    state[target].history.push(currentData);\r\n                    if (!isDataNextExist) {\r\n                        state[target].index += 1;\r\n                        state[target].style = [];\r\n                        state[target].currentIndex += 1;\r\n\r\n                    } else {\r\n                        state[target].index = nextData.index;\r\n                        state[target].style = [...nextData.style];\r\n                        state[target].currentIndex += 1;\r\n\r\n                    }\r\n\r\n                } else {\r\n                    // Cập nhật style hiện tại, nhưng không thêm mới dữ liệu vào lịch sử\r\n                    state[target].style = [...currentData.style];\r\n                    state[target].history[currentData.index].style = [...currentData.style];\r\n                    if (!isDataNextExist) {\r\n                        state[target].index += 1;\r\n                        state[target].style = [];\r\n                        state[target].currentIndex += 1;\r\n                    } else {\r\n                        state[target].index = nextData.index;\r\n                        state[target].style = [...nextData.style];\r\n                        state[target].currentIndex += 1;\r\n                    }\r\n                }\r\n            }\r\n        },\r\n        moveToPreviousQuestion: (state, action) => {\r\n            const { target } = action.payload;\r\n            if (state[target].currentIndex >= 0) {\r\n                // Kiểm tra xem dữ liệu hiện tại đã tồn tại trong lịch sử chưa\r\n                const currentData = {\r\n                    index: state[target].index,\r\n                    style: [...state[target].style]\r\n                };\r\n                const isDataCurrentExist = state[target].history.some(data =>\r\n                    data.hasOwnProperty('index') && data.index === currentData.index\r\n                );\r\n                // Nếu dữ liệu chưa tồn tại trong lịch sử, push vào history\r\n                if (!isDataCurrentExist) {\r\n                    state[target].history.push(currentData);\r\n\r\n                    // state[target].currentIndex += 1;\r\n                } else {\r\n                    // Cập nhật style hiện tại, nhưng không thêm mới dữ liệu vào lịch sử\r\n                    state[target].style = [...currentData.style];\r\n                    state[target].history[currentData.index].style = [...currentData.style];\r\n\r\n                }\r\n                const previousData = state[target].history[state[target].currentIndex] || null;\r\n                // Phục hồi dữ liệu từ lịch sử\r\n                state[target].index = previousData.index;\r\n\r\n                state[target].style = [...previousData.style];\r\n                // Giảm chỉ số hiện tại\r\n                state[target].currentIndex -= 1;\r\n\r\n            }\r\n        },\r\n    },\r\n    extraReducers: builder => {\r\n        handleAsyncThunk(builder, fetchA1QuestionData, [\"importantQuestion\", \"ruleQuestion\"]);\r\n        handleAsyncThunk(builder, fetchB1QuestionData, [\"importantQuestion\", \"ruleQuestion\"]);\r\n    }\r\n});\r\n\r\n\r\nexport const { setIndex, setStyles, moveToNextQuestion, moveToPreviousQuestion, resetState, saveQuestion, setTypeQuestion } = Slice.actions;\r\n\r\nexport default Slice.reducer;\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}