{"ast":null,"code":"import React, { useState } from 'react';\nimport { SafeAreaProvider } from 'react-native-safe-area-context';\nimport Animated from \"react-native-web/dist/exports/Animated\";\nimport ScrollView from \"react-native-web/dist/exports/ScrollView\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport View from \"react-native-web/dist/exports/View\";\nimport { Avatar, Surface, Text } from 'react-native-paper';\nimport { DarkTheme } from '@react-navigation/native';\nimport Icon from \"@expo/vector-icons/FontAwesome\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nexport default Exam = function Exam() {\n  return _jsx(View, {});\n};","map":{"version":3,"names":["React","useState","SafeAreaProvider","Animated","ScrollView","StyleSheet","TouchableOpacity","View","Avatar","Surface","Text","DarkTheme","Icon","jsx","_jsx","Exam"],"sources":["C:/ReactNative/DriverLicense/DriverLicenseApp/screens/Exam.js"],"sourcesContent":["import React, { useState } from 'react'\r\nimport { SafeAreaProvider } from 'react-native-safe-area-context'\r\nimport { Animated, ScrollView, StyleSheet, TouchableOpacity, View } from 'react-native'\r\nimport { Avatar, Surface, Text } from 'react-native-paper'\r\nimport { DarkTheme } from '@react-navigation/native'\r\nimport Icon from 'react-native-vector-icons/FontAwesome'\r\n\r\n//Demo\r\n// const Leftcontent = (props) => <Avatar.Icon {...props} size={40} icon=\"account\" />\r\n// export default Exam = () => {\r\n//   var ArrEx = [];\r\n//   const [countEx, SetContEx] = useState(10);\r\n\r\n//   const Ex = ({ count }) => {\r\n//     for (let index = 0; index < countEx; index++) {\r\n//       ArrEx.push(\r\n//         <Surface key={index} style={styles.surfaceUser} theme={DarkTheme}>\r\n//           <Leftcontent style={styles.ImageUser} />\r\n//           <View style={styles.ViewPercent}>\r\n//             <Text style={{ fontSize: 20, fontWeight: 'bold' }}>Đề số {index + 1}</Text>\r\n//             <Text style={{ fontSize: 15 }}>25 câu/19 phút</Text>\r\n\r\n//           </View>\r\n//           <TouchableOpacity style={styles.ButtonEx}>\r\n//             <Text style={{ margin: '2%', fontSize: 15, fontWeight: 'bold', color: 'blue', alignSelf: 'center' }}>LÀM BÀI</Text>\r\n//           </TouchableOpacity>\r\n//         </Surface>\r\n//       )\r\n\r\n//     }\r\n//     return (\r\n//       <View>\r\n//         {ArrEx}\r\n//       </View>\r\n//     )\r\n//   }\r\n\r\n//   //animated button them\r\n//   const [icon_1] = useState(new Animated.Value(30));\r\n//   const [icon_2] = useState(new Animated.Value(30));\r\n//   const [icon_3] = useState(new Animated.Value(30));\r\n\r\n//   const [pop, setPop] = useState(false);\r\n\r\n//   const popIn = () => {\r\n//     setPop(true);\r\n//     Animated.timing(icon_1, {\r\n//       toValue: 130,\r\n//       duration: 500,\r\n//       useNativeDriver: false,\r\n//     }).start();\r\n//     Animated.timing(icon_2, {\r\n//       toValue: 110,\r\n//       duration: 500,\r\n//       useNativeDriver: false,\r\n//     }).start();\r\n//     Animated.timing(icon_3, {\r\n//       toValue: 130,\r\n//       duration: 500,\r\n//       useNativeDriver: false,\r\n//     }).start();\r\n//   }\r\n\r\n//   const popOut = () => {\r\n//     setPop(false);\r\n//     Animated.timing(icon_1, {\r\n//       toValue: 40,\r\n//       duration: 500,\r\n//       useNativeDriver: false,\r\n//     }).start();\r\n//     Animated.timing(icon_2, {\r\n//       toValue: 40,\r\n//       duration: 500,\r\n//       useNativeDriver: false,\r\n//     }).start();\r\n//     Animated.timing(icon_3, {\r\n//       toValue: 40,\r\n//       duration: 500,\r\n//       useNativeDriver: false,\r\n//     }).start();\r\n//   }\r\n\r\n\r\n\r\n//   return (\r\n//     <SafeAreaProvider>\r\n\r\n//       <ScrollView style={styles.container}>\r\n//         <View style={styles.viewEx}>\r\n//           <Ex />\r\n\r\n//         </View>\r\n\r\n//       </ScrollView>\r\n//       {/* <FAB\r\n//                 icon=\"plus\"\r\n//                 style={styles.fab}\r\n//                 onPress={() => console.log('Pressed')}\r\n//             /> */}\r\n\r\n//       <View style={{\r\n//         bottom: '10%',\r\n//         left: \"2%\"\r\n//       }}>\r\n//         <Animated.View style={[styles.circle, { bottom: icon_1 }]}>\r\n//           <TouchableOpacity>\r\n//             <Icon name=\"cloud-upload\" size={25} color=\"#FFFF\" />\r\n//           </TouchableOpacity>\r\n//         </Animated.View>\r\n//         <Animated.View style={[styles.circle, { bottom: icon_2, right: icon_2 }]}>\r\n//           <TouchableOpacity>\r\n//             <Icon name=\"print\" size={25} color=\"#FFFF\" />\r\n//           </TouchableOpacity>\r\n//         </Animated.View>\r\n//         <Animated.View style={[styles.circle, { right: icon_3 }]}>\r\n//           <TouchableOpacity>\r\n//             <Icon name=\"share-alt\" size={25} color=\"#FFFF\" />\r\n//           </TouchableOpacity>\r\n//         </Animated.View>\r\n//         <TouchableOpacity\r\n//           style={styles.circle}\r\n//           onPress={() => {\r\n//             pop === false ? popIn() : popOut();\r\n//           }}\r\n//         >\r\n//           <Icon name=\"plus\" size={25} color=\"#FFFF\" />\r\n//         </TouchableOpacity>\r\n//       </View>\r\n//     </SafeAreaProvider>\r\n//   )\r\n// }\r\n\r\n// const styles = StyleSheet.create({\r\n//   container:\r\n//   {\r\n//     flex: 1,\r\n//     backgroundColor: \"#f5f5f5\",\r\n//     marginBottom: 80,\r\n//   },\r\n//   viewEx:\r\n//   {\r\n//     flex: 1,\r\n\r\n//   },\r\n//   surfaceUser:\r\n//   {\r\n//     flexDirection: 'row',\r\n//     padding: \"1%\",\r\n//     elevation: 6,\r\n//     borderRadius: 15,\r\n//     backgroundColor: \"white\",\r\n//     margin: \"2%\"\r\n//   },\r\n//   ButtonEx:\r\n//   {\r\n//     backgroundColor: '#CCFFFF',\r\n//     alignSelf: 'center',\r\n//     borderRadius: 8,\r\n//     left: '250%'\r\n//   },\r\n\r\n//   circle: {\r\n//     backgroundColor: '#00BFFF',\r\n//     width: 60,\r\n//     height: 60,\r\n//     position: 'absolute',\r\n//     bottom: 40,\r\n//     right: 40,\r\n//     borderRadius: 50,\r\n//     justifyContent: 'center',\r\n//     alignItems: 'center',\r\n//   },\r\n//   ViewPercent:\r\n//   {\r\n//     flexDirection: 'column',\r\n//     justifyContent: 'center',\r\n//     alignItems: 'center',\r\n//     left: \"25%\"\r\n//   },\r\n\r\n// })\r\n\r\nexport default Exam = () => {\r\n  return (\r\n    <View>\r\n\r\n    </View>\r\n  )\r\n}"],"mappings":"AAAA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AACvC,SAASC,gBAAgB,QAAQ,gCAAgC;AAAA,OAAAC,QAAA;AAAA,OAAAC,UAAA;AAAA,OAAAC,UAAA;AAAA,OAAAC,gBAAA;AAAA,OAAAC,IAAA;AAEjE,SAASC,MAAM,EAAEC,OAAO,EAAEC,IAAI,QAAQ,oBAAoB;AAC1D,SAASC,SAAS,QAAQ,0BAA0B;AACpD,OAAOC,IAAI;AAA6C,SAAAC,GAAA,IAAAC,IAAA;AAiLxD,eAAeC,IAAI,GAAG,SAAAA,KAAA,EAAM;EAC1B,OACED,IAAA,CAACP,IAAI,IAEC,CAAC;AAEX,CAAC"},"metadata":{},"sourceType":"module","externalDependencies":[]}