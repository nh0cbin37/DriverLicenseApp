{"ast":null,"code":"import _toConsumableArray from \"@babel/runtime/helpers/toConsumableArray\";\nimport _asyncToGenerator from \"@babel/runtime/helpers/asyncToGenerator\";\nimport { createAsyncThunk, createSlice } from '@reduxjs/toolkit';\nimport axios from 'axios';\nimport { HOST } from \"../env\";\nvar initialState = {\n  importantQuestion: {\n    data: [],\n    index: 1,\n    style: [],\n    history: [],\n    redoHistory: [],\n    currentIndex: -1,\n    loading: false,\n    error: ''\n  },\n  ruleQuestion: {\n    data: [],\n    index: 0,\n    style: [],\n    history: [],\n    currentIndex: -1,\n    loading: false,\n    error: ''\n  }\n};\nexport var fetchA1QuestionData = createAsyncThunk('question/fetchA1QuestionData', _asyncToGenerator(function* () {\n  var response = yield axios.get(`${HOST}/Question/get/type/A1`);\n  return response.data;\n}));\nexport var fetchB1QuestionData = createAsyncThunk('question/fetchB1QuestionData', _asyncToGenerator(function* () {\n  var response = yield axios.get(`${HOST}/Question/get/type/B1`);\n  return response.data;\n}));\nvar handleAsyncThunk = function handleAsyncThunk(builder, asyncThunk, stateKeys) {\n  builder.addCase(asyncThunk.pending, function (state) {\n    state.status = 'loading';\n    stateKeys.forEach(function (key) {\n      state[key].loading = true;\n    });\n  }).addCase(asyncThunk.fulfilled, function (state, action) {\n    state.status = 'succeeded';\n    stateKeys.forEach(function (key) {\n      state[key].loading = false;\n      state[key].data = action.payload;\n    });\n  }).addCase(asyncThunk.rejected, function (state, action) {\n    state.status = 'failed';\n    stateKeys.forEach(function (key) {\n      state[key].loading = false;\n      state[key].error = action.error.message;\n    });\n  });\n};\nvar Slice = createSlice({\n  name: 'question',\n  initialState: initialState,\n  reducers: {\n    setIndex: function setIndex(state, action) {\n      var _action$payload = action.payload,\n        target = _action$payload.target,\n        value = _action$payload.value;\n      state[target].index = value;\n    },\n    setStyles: function setStyles(state, action) {\n      var _action$payload2 = action.payload,\n        target = _action$payload2.target,\n        value = _action$payload2.value;\n      state[target].style = value;\n    },\n    resetState: function resetState(state, action) {\n      var target = action.payload.target;\n      state[target].index = 0, state[target].currentIndex = -1, state[target].history = [], state[target].style = [];\n    },\n    moveToNextQuestion: function moveToNextQuestion(state, action) {\n      var target = action.payload.target;\n      if (state[target].redoHistory.length > 0) {\n        var redoData = state[target].redoHistory.pop();\n        state[target].history.push({\n          index: state[target].index,\n          style: _toConsumableArray(state[target].style)\n        });\n        state[target].index = redoData.index;\n        state[target].style = _toConsumableArray(redoData.style);\n        state[target].currentIndex += 1;\n      } else {\n        state[target].history.push({\n          index: state[target].index,\n          style: _toConsumableArray(state[target].style)\n        });\n        state[target].index += 1;\n        state[target].style = [];\n        state[target].currentIndex += 1;\n        state[target].redoHistory = [];\n      }\n    },\n    moveToPreviousQuestion: function moveToPreviousQuestion(state, action) {\n      var target = action.payload.target;\n      if (state[target].currentIndex <= 0) return;\n      var currentData = {\n        index: state[target].index,\n        style: _toConsumableArray(state[target].style)\n      };\n      state[target].redoHistory.push(currentData);\n      state[target].history.pop();\n      var previousData = state[target].history[state[target].history.length - 1];\n      state[target].index = previousData ? previousData.index : 0;\n      state[target].style = previousData ? _toConsumableArray(previousData.style) : [];\n      state[target].currentIndex -= 1;\n    }\n  },\n  extraReducers: function extraReducers(builder) {\n    handleAsyncThunk(builder, fetchA1QuestionData, [\"importantQuestion\", \"ruleQuestion\"]);\n    handleAsyncThunk(builder, fetchB1QuestionData, [\"importantQuestion\", \"ruleQuestion\"]);\n  }\n});\nvar _Slice$actions = Slice.actions,\n  setIndex = _Slice$actions.setIndex,\n  setStyles = _Slice$actions.setStyles,\n  moveToNextQuestion = _Slice$actions.moveToNextQuestion,\n  moveToPreviousQuestion = _Slice$actions.moveToPreviousQuestion,\n  resetState = _Slice$actions.resetState;\nexport { setIndex, setStyles, moveToNextQuestion, moveToPreviousQuestion, resetState };\nexport default Slice.reducer;","map":{"version":3,"names":["createAsyncThunk","createSlice","axios","HOST","initialState","importantQuestion","data","index","style","history","redoHistory","currentIndex","loading","error","ruleQuestion","fetchA1QuestionData","_asyncToGenerator","response","get","fetchB1QuestionData","handleAsyncThunk","builder","asyncThunk","stateKeys","addCase","pending","state","status","forEach","key","fulfilled","action","payload","rejected","message","Slice","name","reducers","setIndex","_action$payload","target","value","setStyles","_action$payload2","resetState","moveToNextQuestion","length","redoData","pop","push","_toConsumableArray","moveToPreviousQuestion","currentData","previousData","extraReducers","_Slice$actions","actions","reducer"],"sources":["C:/ReactNative/DriverLicense/DriverLicenseApp/redux/QuestionsReducer.js"],"sourcesContent":["\r\nimport { createAsyncThunk, createSlice } from '@reduxjs/toolkit';\r\nimport axios from 'axios';\r\nimport { HOST } from '../env';\r\n\r\n\r\nconst initialState = {\r\n    importantQuestion: { data: [], index: 1, style: [], history: [], redoHistory: [], currentIndex: -1, loading: false, error: '', },\r\n    ruleQuestion: { data: [], index: 0, style: [], history: [], currentIndex: -1, loading: false, error: '', }\r\n}\r\nexport const fetchA1QuestionData = createAsyncThunk('question/fetchA1QuestionData', async () => {\r\n    const response = await axios.get(`${HOST}/Question/get/type/A1`);\r\n    return response.data;\r\n});\r\n\r\nexport const fetchB1QuestionData = createAsyncThunk('question/fetchB1QuestionData', async () => {\r\n    const response = await axios.get(`${HOST}/Question/get/type/B1`);\r\n    return response.data;\r\n});\r\n\r\nconst handleAsyncThunk = (builder, asyncThunk, stateKeys) => {\r\n    builder\r\n        .addCase(asyncThunk.pending, state => {\r\n            state.status = 'loading';\r\n            stateKeys.forEach(key => {\r\n                state[key].loading = true;\r\n            });\r\n        })\r\n        .addCase(asyncThunk.fulfilled, (state, action) => {\r\n            state.status = 'succeeded';\r\n            stateKeys.forEach(key => {\r\n                state[key].loading = false;\r\n                state[key].data = action.payload;\r\n            });\r\n        })\r\n        .addCase(asyncThunk.rejected, (state, action) => {\r\n            state.status = 'failed';\r\n            stateKeys.forEach(key => {\r\n                state[key].loading = false;\r\n                state[key].error = action.error.message;\r\n            });\r\n        });\r\n};\r\n\r\nconst Slice = createSlice({\r\n    name: 'question',\r\n    initialState,\r\n    reducers: {\r\n        setIndex: (state, action) => {\r\n            const { target, value } = action.payload;\r\n            state[target].index = value;\r\n        },\r\n        setStyles: (state, action) => {\r\n            const { target, value } = action.payload;\r\n            state[target].style = value;\r\n        },\r\n        // moveToNextQuestion: (state, action) => {\r\n        //     const { target } = action.payload;\r\n        //     if (state[target].currentIndex < state[target].history.length - 1) {\r\n        //         // User is navigating using history\r\n        //         state[target].currentIndex += 1;\r\n        //         const nextData = state[target].history[state[target].currentIndex + 1];\r\n        //         const currentData = {\r\n        //             index: state[target].index,\r\n        //             style: [...state[target].style]\r\n        //         };\r\n        //         const isDataExist = state[target].history.some(data =>\r\n        //             data.index === currentData.index\r\n        //         );\r\n        //         // Nếu dữ liệu chưa tồn tại trong lịch sử, push vào history\r\n        //         if (!isDataExist) {\r\n        //             state[target].history.push(currentData);\r\n        //         } else {\r\n        //             // Cập nhật style hiện tại, nhưng không thêm mới dữ liệu vào lịch sử\r\n        //             state[target].style = [...currentData.style];\r\n        //             state[target].history[currentData.index].style = [...currentData.style];\r\n        //         }\r\n        //         // Phục hồi dữ liệu từ lịch sử\r\n        //         state[target].index = nextData.index;\r\n        //         state[target].style = [...nextData.style];\r\n        //         state[target].currentIndex += 1;\r\n        //     } else {\r\n        //         // Save the current state before moving on\r\n        //         state[target].history.push({\r\n        //             index: state[target].index,\r\n        //             style: [...state[target].style]\r\n        //         });\r\n        //         state[target].index += 1;\r\n        //         state[target].style = [];\r\n        //         state[target].currentIndex += 1;\r\n        //     }\r\n        // },\r\n        // moveToPreviousQuestion: (state, action) => {\r\n        //     const { target } = action.payload;\r\n        //     if (state[target].currentIndex >= 0) {\r\n        //         const previousData = state[target].history[state[target].currentIndex];\r\n        //         // Kiểm tra xem dữ liệu hiện tại đã tồn tại trong lịch sử chưa\r\n        //         const currentData = {\r\n        //             index: state[target].index,\r\n        //             style: [...state[target].style]\r\n        //         };\r\n        //         const isDataExist = state[target].history.some(data =>\r\n        //             data.index === currentData.index\r\n        //         );\r\n        //         // Nếu dữ liệu chưa tồn tại trong lịch sử, push vào history\r\n        //         if (!isDataExist) {\r\n        //             state[target].history.push(currentData);\r\n        //         } else {\r\n        //             // Cập nhật style hiện tại, nhưng không thêm mới dữ liệu vào lịch sử\r\n        //             state[target].style = [...currentData.style];\r\n        //             state[target].history[currentData.index].style = [...currentData.style];\r\n        //         }\r\n        //         // Phục hồi dữ liệu từ lịch sử\r\n        //         state[target].index = previousData.index;\r\n        //         state[target].style = [...previousData.style];\r\n        //         // Giảm chỉ số hiện tại\r\n        //         state[target].currentIndex -= 1;\r\n        //     }\r\n        // },\r\n        resetState: (state, action) => {\r\n            const { target } = action.payload;\r\n            state[target].index = 0,\r\n                state[target].currentIndex = -1,\r\n                state[target].history = [],\r\n                state[target].style = []\r\n        },\r\n        moveToNextQuestion: (state, action) => {\r\n            const { target } = action.payload;\r\n\r\n            if (state[target].redoHistory.length > 0) {\r\n                // Nếu redoHistory có dữ liệu, thực hiện redo\r\n                const redoData = state[target].redoHistory.pop();\r\n                state[target].history.push({\r\n                    index: state[target].index,\r\n                    style: [...state[target].style]\r\n                });\r\n                state[target].index = redoData.index;\r\n                state[target].style = [...redoData.style];\r\n                state[target].currentIndex += 1;\r\n            } else {\r\n                // Nếu không, thực hiện moveToNextQuestion\r\n                state[target].history.push({\r\n                    index: state[target].index,\r\n                    style: [...state[target].style]\r\n                });\r\n                state[target].index += 1;\r\n                state[target].style = [];\r\n                state[target].currentIndex += 1;\r\n                state[target].redoHistory = []; // Xóa redoHistory sau mỗi hành động mới\r\n            }\r\n        },\r\n\r\n        moveToPreviousQuestion: (state, action) => {\r\n            const { target } = action.payload;\r\n\r\n            if (state[target].currentIndex <= 0) return; // Đảm bảo không quay lại quá xa\r\n\r\n            // Push current state to redoHistory\r\n            const currentData = {\r\n                index: state[target].index,\r\n                style: [...state[target].style]\r\n            };\r\n            state[target].redoHistory.push(currentData);\r\n\r\n            // Restore the previous state from history\r\n            state[target].history.pop(); // Remove the latest state from history\r\n            const previousData = state[target].history[state[target].history.length - 1];\r\n            state[target].index = previousData ? previousData.index : 0;\r\n            state[target].style = previousData ? [...previousData.style] : [];\r\n            state[target].currentIndex -= 1;\r\n        },\r\n    },\r\n    extraReducers: builder => {\r\n        handleAsyncThunk(builder, fetchA1QuestionData, [\"importantQuestion\", \"ruleQuestion\"]);\r\n        handleAsyncThunk(builder, fetchB1QuestionData, [\"importantQuestion\", \"ruleQuestion\"]);\r\n    }\r\n});\r\n\r\n\r\n\r\nexport const { setIndex, setStyles, moveToNextQuestion, moveToPreviousQuestion, resetState } = Slice.actions;\r\n\r\nexport default Slice.reducer;\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}