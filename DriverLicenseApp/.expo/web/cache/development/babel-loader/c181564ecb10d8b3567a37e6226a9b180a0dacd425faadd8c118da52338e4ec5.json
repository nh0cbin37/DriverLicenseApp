{"ast":null,"code":"import { DarkTheme } from '@react-navigation/native';\nimport React, { useState } from 'react';\nimport Image from \"react-native-web/dist/exports/Image\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport View from \"react-native-web/dist/exports/View\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport ScrollView from \"react-native-web/dist/exports/ScrollView\";\nimport { Surface } from 'react-native-paper';\nimport { SafeAreaProvider } from 'react-native-safe-area-context';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { setTypeQuestion } from \"../../redux/QuestionsReducer\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nvar Learning = function Learning(_ref) {\n  var navigation = _ref.navigation;\n  var dispatch = useDispatch();\n  var question = useSelector(function (state) {\n    return state.questions.importantQuestion.data;\n  });\n  var totalQuesion = function totalQuesion(typeQuestion) {\n    if (question && question.length > 0) return question.filter(function (item) {\n      return item.typequestion === typeQuestion;\n    });\n    return [];\n  };\n  var completeIQ = useSelector(function (state) {\n    return state.questions.importantQuestion.history;\n  });\n  var completeRQ = useSelector(function (state) {\n    return state.questions.ruleQuestion.history;\n  });\n  var compleateQuesion = function compleateQuesion(history) {\n    if (history && history.length > 0) return history.filter(function (item) {\n      return item.style.length > 0;\n    });\n    return [];\n  };\n  var width = [`${compleateQuesion(completeIQ).length / totalQuesion(\"important\").length * 100}%`, `${compleateQuesion(completeRQ).length / totalQuesion(\"rule\").length * 100}%`, `${10 / 20 * 100}%`, `${12 / 20 * 100}%`, `${15 / 20 * 100}%`, `${20 / 20 * 100}%`];\n  var completeQ = [`${compleateQuesion(completeIQ).length} / ${totalQuesion(\"important\").length}`, `${compleateQuesion(completeRQ).length} / ${totalQuesion(\"rule\").length}`];\n  var handleDataTran = function handleDataTran(typeQuestion, typeIndex, index) {\n    navigation.navigate('Question', {\n      typeQuestion: typeQuestion && typeQuestion.length > 0 ? typeQuestion[index] : null,\n      typeIndex: typeIndex && typeIndex.length > 0 ? typeIndex[index] : null,\n      stateAPi: index\n    });\n    dispatch(setTypeQuestion({\n      target: typeIndex[index]\n    }));\n  };\n  return _jsx(SafeAreaProvider, {\n    children: _jsx(ScrollView, {\n      style: styles.container,\n      children: _jsx(View, {\n        style: styles.viewEx,\n        children: dataItem.map(function (item, index) {\n          return _jsx(Surface, {\n            children: _jsxs(TouchableOpacity, {\n              style: styles.surfaceUser,\n              theme: DarkTheme,\n              onPress: function onPress() {\n                return handleDataTran(typeQuestion, typeIndex, index);\n              },\n              children: [_jsx(Leftcontent, {\n                style: styles.ImageUser,\n                image: index\n              }), _jsxs(View, {\n                style: styles.ViewPercent,\n                children: [_jsx(Text, {\n                  style: {\n                    fontSize: 20,\n                    fontWeight: 'bold'\n                  },\n                  children: item\n                }), _jsx(Text, {\n                  style: {\n                    fontSize: 15\n                  },\n                  children: dataDetailItem[index]\n                }), _jsxs(View, {\n                  style: {\n                    flexDirection: 'row',\n                    marginTop: '2%'\n                  },\n                  children: [_jsx(View, {\n                    style: {\n                      backgroundColor: '#BBBBBB',\n                      marginRight: '2%',\n                      width: '80%',\n                      marginVertical: '3%',\n                      borderRadius: 20\n                    },\n                    children: _jsx(View, {\n                      style: {\n                        backgroundColor: 'blue',\n                        width: width[index],\n                        height: 5,\n                        borderRadius: 20\n                      }\n                    })\n                  }), _jsx(View, {\n                    children: _jsx(Text, {\n                      children: completeQ[index]\n                    })\n                  })]\n                })]\n              })]\n            })\n          }, index);\n        })\n      })\n    })\n  });\n};\nexport default Learning;\nvar styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    backgroundColor: \"#f5f5f5\",\n    marginBottom: 80\n  },\n  viewEx: {\n    justifyContent: 'space-between'\n  },\n  surfaceUser: {\n    flexDirection: 'row',\n    elevation: 6,\n    borderRadius: 20,\n    backgroundColor: \"white\",\n    margin: \"3%\"\n  },\n  ViewPercent: {\n    flex: 2,\n    marginLeft: '2%',\n    justifyContent: \"center\"\n  },\n  ImageUser: {\n    flex: 1\n  }\n});","map":{"version":3,"names":["DarkTheme","React","useState","Image","TouchableOpacity","Text","View","StyleSheet","ScrollView","Surface","SafeAreaProvider","useDispatch","useSelector","setTypeQuestion","jsx","_jsx","jsxs","_jsxs","Learning","_ref","navigation","dispatch","question","state","questions","importantQuestion","data","totalQuesion","typeQuestion","length","filter","item","typequestion","completeIQ","history","completeRQ","ruleQuestion","compleateQuesion","style","width","completeQ","handleDataTran","typeIndex","index","navigate","stateAPi","target","children","styles","container","viewEx","dataItem","map","surfaceUser","theme","onPress","Leftcontent","ImageUser","image","ViewPercent","fontSize","fontWeight","dataDetailItem","flexDirection","marginTop","backgroundColor","marginRight","marginVertical","borderRadius","height","create","flex","marginBottom","justifyContent","elevation","margin","marginLeft"],"sources":["C:/ReactNative/DriverLicense/DriverLicenseApp/screens/Leaning/Learning.js"],"sourcesContent":["import { DarkTheme } from '@react-navigation/native'\r\nimport React, { useState } from 'react'\r\nimport { Image, TouchableOpacity } from 'react-native'\r\nimport { Text, View, StyleSheet, ScrollView } from 'react-native'\r\nimport { Surface } from 'react-native-paper'\r\nimport { SafeAreaProvider } from 'react-native-safe-area-context'\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport { setTypeQuestion } from '../../redux/QuestionsReducer';\r\n\r\n\r\n// const dataImages = {\r\n//     0: require('../../assets/12.png'),\r\n//     1: require('../../assets/13.png'),\r\n//     2: require('../../assets/14.png'),\r\n//     3: require('../../assets/16.png'),\r\n//     4: require('../../assets/15.png'),\r\n//     5: require('../../assets/17.png'),\r\n\r\n// };\r\n// const dataItem = [\"Câu hỏi điểm liệt\", \"Khái niệm và quy tắc\", \"Văn hóa và đạo đức lái xe\", \"Kỹ thuật lái xe\", \"Biển báo đường bộ\", \"Sa hình\"]\r\n// const typeQuestion = [\"important\", \"rule\"];\r\n// const typeIndex = [\"importantQuestion\", \"ruleQuestion\"];\r\n// const dataDetailItem = [\"20 Câu hỏi diểm liệt\", \"Gồm 83 câu hỏi\", \"Gồm 5 câu hỏi\", \"Gồm 12 câu hỏi\", \"Gồm 65 câu hỏi\", \"Gồm 35 câu hỏi\"]\r\n\r\n// const Leftcontent = (props) => {\r\n//     const imageName = props.image\r\n\r\n//     return (\r\n//         <View>\r\n//             <Image {...props} source={dataImages[imageName]} resizeMode='contain' style={{ borderRadius: 20 }} />\r\n//         </View>\r\n//     )\r\n// }\r\n\r\n\r\nconst Learning = ({ navigation }) => {\r\n\r\n    const dispatch = useDispatch();\r\n    const question = useSelector(state => state.questions.importantQuestion.data);\r\n    const totalQuesion = (typeQuestion) => {\r\n        if (question && question.length > 0) return question.filter(item => item.typequestion === typeQuestion)\r\n        return [];\r\n    }\r\n\r\n    const completeIQ = useSelector(state => state.questions.importantQuestion.history);\r\n    const completeRQ = useSelector(state => state.questions.ruleQuestion.history);\r\n    const compleateQuesion = (history) => {\r\n        if (history && history.length > 0) return history.filter(item => item.style.length > 0)\r\n        return [];\r\n    }\r\n\r\n\r\n\r\n    const width = [`${((compleateQuesion(completeIQ).length) / totalQuesion(\"important\").length) * 100}%`, `${((compleateQuesion(completeRQ).length) / totalQuesion(\"rule\").length) * 100}%`, `${(10 / 20) * 100}%`, `${(12 / 20) * 100}%`, `${(15 / 20) * 100}%`, `${(20 / 20) * 100}%`]\r\n    const completeQ = [`${(compleateQuesion(completeIQ).length)} / ${totalQuesion(\"important\").length}`, `${(compleateQuesion(completeRQ).length)} / ${totalQuesion(\"rule\").length}`]\r\n    const handleDataTran = (typeQuestion, typeIndex, index) => {\r\n        navigation.navigate('Question', {\r\n            typeQuestion: typeQuestion && typeQuestion.length > 0 ? typeQuestion[index] : null,\r\n            typeIndex: typeIndex && typeIndex.length > 0 ? typeIndex[index] : null,\r\n            stateAPi: index\r\n        })\r\n        dispatch(setTypeQuestion({ target: typeIndex[index] }))\r\n    }\r\n\r\n\r\n    return (\r\n        <SafeAreaProvider>\r\n            <ScrollView style={styles.container}>\r\n                <View style={styles.viewEx}>\r\n                    {dataItem.map((item, index) => (\r\n                        <Surface key={index} >\r\n                            <TouchableOpacity style={styles.surfaceUser} theme={DarkTheme} onPress={() => handleDataTran(typeQuestion, typeIndex, index)} >\r\n                                <Leftcontent style={styles.ImageUser} image={index} />\r\n                                <View style={styles.ViewPercent} >\r\n                                    <Text style={{ fontSize: 20, fontWeight: 'bold' }}>{item}</Text>\r\n                                    <Text style={{ fontSize: 15, }}>{dataDetailItem[index]}</Text>\r\n                                    <View style={{ flexDirection: 'row', marginTop: '2%', }}>\r\n                                        <View style={{ backgroundColor: '#BBBBBB', marginRight: '2%', width: '80%', marginVertical: '3%', borderRadius: 20 }}>\r\n                                            <View style={{ backgroundColor: 'blue', width: width[index], height: 5, borderRadius: 20 }} />\r\n                                        </View>\r\n                                        <View>\r\n                                            <Text>{completeQ[index]}</Text>\r\n                                        </View>\r\n                                    </View>\r\n                                </View>\r\n                            </TouchableOpacity>\r\n                        </Surface>\r\n                    ))}\r\n                </View>\r\n            </ScrollView>\r\n        </SafeAreaProvider>\r\n    )\r\n}\r\n\r\nexport default Learning\r\n\r\nconst styles = StyleSheet.create({\r\n    container:\r\n    {\r\n        flex: 1,\r\n        backgroundColor: \"#f5f5f5\",\r\n        marginBottom: 80,\r\n    },\r\n    viewEx:\r\n    {\r\n        justifyContent: 'space-between',\r\n\r\n    },\r\n    surfaceUser:\r\n    {\r\n        flexDirection: 'row',\r\n        elevation: 6,\r\n        borderRadius: 20,\r\n        backgroundColor: \"white\",\r\n        margin: \"3%\"\r\n    },\r\n    ViewPercent:\r\n    {\r\n        flex: 2,\r\n        marginLeft: '2%',\r\n        justifyContent: \"center\",\r\n\r\n    },\r\n    ImageUser: {\r\n        flex: 1,\r\n    }\r\n\r\n})\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}