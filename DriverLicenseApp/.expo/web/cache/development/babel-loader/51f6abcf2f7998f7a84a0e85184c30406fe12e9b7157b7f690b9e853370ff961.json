{"ast":null,"code":"import { configureStore, getDefaultMiddleware } from '@reduxjs/toolkit';\nimport QuestionsReducer from \"./QuestionsReducer\";\nimport { persistReducer, persistStore } from 'redux-persist';\nimport AsyncStorage from '@react-native-async-storage/async-storage';\nvar persistConfig = {\n  key: 'root',\n  storage: AsyncStorage\n};\nvar persistedReducer = persistReducer(persistConfig, QuestionsReducer);\nvar store = configureStore({\n  reducer: {\n    questions: persistedReducer\n  },\n  middleware: function middleware(getDefaultMiddleware) {\n    return getDefaultMiddleware({\n      serializableCheck: {\n        ignoredActions: ['persist/PERSIST']\n      }\n    });\n  }\n});\nvar persistor = persistStore(store);\nexport { store, persistor };","map":{"version":3,"names":["configureStore","getDefaultMiddleware","QuestionsReducer","persistReducer","persistStore","AsyncStorage","persistConfig","key","storage","persistedReducer","store","reducer","questions","middleware","serializableCheck","ignoredActions","persistor"],"sources":["C:/ReactNative/DriverLicense/DriverLicenseApp/redux/store.js"],"sourcesContent":["// store.js\r\n\r\n// import { createStore, applyMiddleware } from 'redux';\r\n// import thunk from 'redux-thunk';\r\n// import rootReducer from './rootReducer';\r\n// const store = createStore(rootReducer, applyMiddleware(thunk));\r\n// export default store;\r\n\r\n\r\n// import { createStore, applyMiddleware } from 'redux';\r\n// import thunk from 'redux-thunk';\r\n// import { persistStore, persistReducer } from 'redux-persist';\r\n// import AsyncStorage from '@react-native-async-storage/async-storage';\r\n// import rootReducer from './rootReducer';\r\n// const persistConfig = {\r\n//     key: 'root',\r\n//     storage: AsyncStorage,\r\n//     whitelist: ['importantQuestions', 'ruleQuestions'],\r\n// };\r\n// const persistedReducer = persistReducer(persistConfig, rootReducer);\r\n// const store = createStore(persistedReducer, applyMiddleware(thunk));\r\n// const persistor = persistStore(store);\r\n// export { store, persistor };\r\n\r\n\r\nimport { configureStore, getDefaultMiddleware } from '@reduxjs/toolkit';\r\nimport QuestionsReducer from './QuestionsReducer';\r\nimport { persistReducer, persistStore } from 'redux-persist';\r\nimport AsyncStorage from '@react-native-async-storage/async-storage';\r\n\r\nconst persistConfig = {\r\n    key: 'root',\r\n    storage: AsyncStorage,\r\n};\r\n\r\nconst persistedReducer = persistReducer(persistConfig, QuestionsReducer);\r\n\r\nconst store = configureStore({\r\n    reducer: {\r\n        questions: persistedReducer,\r\n    },\r\n    middleware: (getDefaultMiddleware) => getDefaultMiddleware({\r\n        serializableCheck: {\r\n            // Ignore these action types\r\n            ignoredActions: ['persist/PERSIST'],\r\n        },\r\n    }),\r\n});\r\n\r\nconst persistor = persistStore(store);\r\n\r\nexport { store, persistor };\r\n"],"mappings":"AAyBA,SAASA,cAAc,EAAEC,oBAAoB,QAAQ,kBAAkB;AACvE,OAAOC,gBAAgB;AACvB,SAASC,cAAc,EAAEC,YAAY,QAAQ,eAAe;AAC5D,OAAOC,YAAY,MAAM,2CAA2C;AAEpE,IAAMC,aAAa,GAAG;EAClBC,GAAG,EAAE,MAAM;EACXC,OAAO,EAAEH;AACb,CAAC;AAED,IAAMI,gBAAgB,GAAGN,cAAc,CAACG,aAAa,EAAEJ,gBAAgB,CAAC;AAExE,IAAMQ,KAAK,GAAGV,cAAc,CAAC;EACzBW,OAAO,EAAE;IACLC,SAAS,EAAEH;EACf,CAAC;EACDI,UAAU,EAAE,SAAAA,WAACZ,oBAAoB;IAAA,OAAKA,oBAAoB,CAAC;MACvDa,iBAAiB,EAAE;QAEfC,cAAc,EAAE,CAAC,iBAAiB;MACtC;IACJ,CAAC,CAAC;EAAA;AACN,CAAC,CAAC;AAEF,IAAMC,SAAS,GAAGZ,YAAY,CAACM,KAAK,CAAC;AAErC,SAASA,KAAK,EAAEM,SAAS"},"metadata":{},"sourceType":"module","externalDependencies":[]}